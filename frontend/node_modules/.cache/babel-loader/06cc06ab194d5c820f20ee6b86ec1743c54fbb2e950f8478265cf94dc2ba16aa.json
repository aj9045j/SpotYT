{"ast":null,"code":"var _jsxFileName = \"/home/ajay/Desktop/spotyt/frontend/src/features/ShowPlaylist.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ShowPlaylist(props) {\n  _s();\n  const [playlists, setplaylist] = useState([]);\n  useEffect(() => {\n    const fetchSongs = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/fetchPlaylist/${props.email}`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch songs');\n        }\n        const data = await response.json();\n        console.log(data.playlistName);\n        setplaylist(data.playlistName);\n      } catch (error) {\n        console.error('Error fetching songs:', error);\n      }\n    };\n    fetchSongs();\n  }, [props.email]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: playlists.map(playlistId =>\n    /*#__PURE__*/\n    // <div key={playlistId}>{playlistId}</div>\n    _jsxDEV(\"button\", {\n      children: playlistId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n_s(ShowPlaylist, \"qpp1wbb9KwSZT63OU3AnS+Ux9dI=\");\n_c = ShowPlaylist;\nvar _c;\n$RefreshReg$(_c, \"ShowPlaylist\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ShowPlaylist","props","_s","playlists","setplaylist","fetchSongs","response","fetch","email","ok","Error","data","json","console","log","playlistName","error","children","map","playlistId","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/ajay/Desktop/spotyt/frontend/src/features/ShowPlaylist.js"],"sourcesContent":["\nimport React, { useState, useEffect } from 'react'\n\nexport default function ShowPlaylist(props) {\n    const [playlists, setplaylist] = useState([]);\n    useEffect(() => {\n        const fetchSongs = async () => {\n            try {\n                const response = await fetch(`http://localhost:5000/fetchPlaylist/${props.email}`);\n\n                if (!response.ok) {\n                    throw new Error('Failed to fetch songs');\n                }\n                const data = await response.json();\n                console.log(data.playlistName);\n                setplaylist(data.playlistName);\n            } catch (error) {\n                console.error('Error fetching songs:', error);\n            }\n        };\n\n        fetchSongs();\n    }, [props.email]);\n\n    return (\n        <div>\n            {playlists.map(playlistId => (\n                // <div key={playlistId}>{playlistId}</div>\n                <button>{playlistId}</button>\n            ))}\n        </div>\n    )\n}\n"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElD,eAAe,SAASC,YAAYA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACxC,MAAM,CAACC,SAAS,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC7CC,SAAS,CAAC,MAAM;IACZ,MAAMQ,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,uCAAsCN,KAAK,CAACO,KAAM,EAAC,CAAC;QAElF,IAAI,CAACF,QAAQ,CAACG,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;QAC5C;QACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QAClCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAACI,YAAY,CAAC;QAC9BX,WAAW,CAACO,IAAI,CAACI,YAAY,CAAC;MAClC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZH,OAAO,CAACG,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MACjD;IACJ,CAAC;IAEDX,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,CAACJ,KAAK,CAACO,KAAK,CAAC,CAAC;EAEjB,oBACIT,OAAA;IAAAkB,QAAA,EACKd,SAAS,CAACe,GAAG,CAACC,UAAU;IAAA;IACrB;IACApB,OAAA;MAAAkB,QAAA,EAASE;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAC/B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAACrB,EAAA,CA7BuBF,YAAY;AAAAwB,EAAA,GAAZxB,YAAY;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}