{"ast":null,"code":"\n// import React, { useEffect, useState } from 'react';\n\n// export default function Song() {\n//     const [songs, setSongs] = useState([]);\n//     const [audioUrl, setAudioUrl] = useState('');\n//     const [currImage, setcurrImage] = useState('');\n//     const [queryParam, setQueryParam] = useState('');\n\n//     useEffect(() => {\n//         const getquery = async () => {\n//             const urlParams = await new URLSearchParams(window.location.search);\n//             console.log(urlParams);\n//             setQueryParam(urlParams.get('playlistId'));\n//             console.log(urlParams.get('playlistId'));\n//         }\n// getquery();\n//     }, [])\n\n//     useEffect(() => {\n\n//         const fetchSongs = async () => {\n\n//             try {\n//                 const response = await fetch(`http://localhost:5000/fetchSong/${queryParam}`);\n\n//                 if (!response.ok) {\n//                     throw new Error('Failed to fetch songs');\n//                 }\n//                 const data = await response.json();\n//                 setSongs(data.songs);\n//             } catch (error) {\n//                 console.error('Error fetching songs:', error);\n//             }\n//         };\n\n//         fetchSongs();\n//     }, [queryParam]);\n\n//     const playSong = async (query) => {\n//         try {\n//             const response = await fetch(`http://localhost:5000/fetchUrl/${query}`);\n//             if (!response.ok) {\n//                 throw new Error('Failed to fetch song URL');\n//             }\n//             const data = await response.json();\n//             setAudioUrl(data.downloadUrl);\n//             console.log(data.downloadUrl);\n//             setcurrImage(data.imageUrl);\n//             console.log(data.imageUrl);\n//         } catch (error) {\n//             console.error('Error playing song:', error);\n//         }\n//     };\n\n//     return (\n//         <div className='player'>\n//             <div>\n//                 <h1>ShowSong</h1>\n//                 <ul>\n//                     {songs.map((song, index) => (\n//                         <li key={index}>\n//                             <p>{song}</p>\n//                             <button onClick={() => playSong(song)}>Play</button>\n//                         </li>\n//                     ))}\n//                 </ul>\n\n//             </div>\n\n//             <div className='popup'>\n//                 <img src={currImage} alt=\"\" />\n//                 <audio src={audioUrl} controls autoPlay></audio>\n//             </div>\n//         </div>\n//     );\n// }","map":{"version":3,"names":[],"sources":["/home/ajay/Desktop/spotyt/frontend/src/pages/Songs.js"],"sourcesContent":["\n// import React, { useEffect, useState } from 'react';\n\n// export default function Song() {\n//     const [songs, setSongs] = useState([]);\n//     const [audioUrl, setAudioUrl] = useState('');\n//     const [currImage, setcurrImage] = useState('');\n//     const [queryParam, setQueryParam] = useState('');\n\n//     useEffect(() => {\n//         const getquery = async () => {\n//             const urlParams = await new URLSearchParams(window.location.search);\n//             console.log(urlParams);\n//             setQueryParam(urlParams.get('playlistId'));\n//             console.log(urlParams.get('playlistId'));\n//         }\n// getquery();\n//     }, [])\n\n//     useEffect(() => {\n\n\n//         const fetchSongs = async () => {\n\n//             try {\n//                 const response = await fetch(`http://localhost:5000/fetchSong/${queryParam}`);\n\n//                 if (!response.ok) {\n//                     throw new Error('Failed to fetch songs');\n//                 }\n//                 const data = await response.json();\n//                 setSongs(data.songs);\n//             } catch (error) {\n//                 console.error('Error fetching songs:', error);\n//             }\n//         };\n\n//         fetchSongs();\n//     }, [queryParam]);\n\n//     const playSong = async (query) => {\n//         try {\n//             const response = await fetch(`http://localhost:5000/fetchUrl/${query}`);\n//             if (!response.ok) {\n//                 throw new Error('Failed to fetch song URL');\n//             }\n//             const data = await response.json();\n//             setAudioUrl(data.downloadUrl);\n//             console.log(data.downloadUrl);\n//             setcurrImage(data.imageUrl);\n//             console.log(data.imageUrl);\n//         } catch (error) {\n//             console.error('Error playing song:', error);\n//         }\n//     };\n\n\n\n\n\n//     return (\n//         <div className='player'>\n//             <div>\n//                 <h1>ShowSong</h1>\n//                 <ul>\n//                     {songs.map((song, index) => (\n//                         <li key={index}>\n//                             <p>{song}</p>\n//                             <button onClick={() => playSong(song)}>Play</button>\n//                         </li>\n//                     ))}\n//                 </ul>\n\n//             </div>\n\n//             <div className='popup'>\n//                 <img src={currImage} alt=\"\" />\n//                 <audio src={audioUrl} controls autoPlay></audio>\n//             </div>\n//         </div>\n//     );\n// }\n"],"mappings":";AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}