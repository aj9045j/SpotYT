{"ast":null,"code":"import React,{useEffect,useState}from'react';import'../style/song.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function Song(){const[isVisible,setIsVisible]=useState(false);const[songs,setSongs]=useState([]);const[audioUrl,setAudioUrl]=useState('');const[currImage,setCurrImage]=useState('');const[queryParam,setQueryParam]=useState('');const[imageUrls,setImageUrls]=useState({});const[currindex,setcurrindex]=useState();useEffect(()=>{const getQueryParam=async()=>{const urlParams=await new URLSearchParams(window.location.search);setQueryParam(urlParams.get('playlistId'));};getQueryParam();},[]);useEffect(()=>{const fetchSongs=async()=>{try{const response=await fetch(\"http://localhost:5000/fetchSong/\".concat(queryParam));if(!response.ok){throw new Error('Failed to fetch songs');}const data=await response.json();setSongs(data.songs);}catch(error){console.error('Error fetching songs:',error);}};fetchSongs();},[queryParam]);useEffect(()=>{const fetchImages=async()=>{const urls={};await Promise.all(songs.map(async song=>{try{const response=await fetch(\"https://spotyt.onrender.com//fetchImage/\".concat(song));if(!response.ok){throw new Error('Failed to fetch image');}const data=await response.json();urls[song]=data.url;}catch(error){console.error('Error fetching image:',error);}}));setImageUrls(urls);};fetchImages();},[songs]);const playSong=async query=>{try{const response=await fetch(\"https://spotyt.onrender.com//fetchUrl/\".concat(query));if(!response.ok){throw new Error('Failed to fetch song URL');}const data=await response.json();setcurrindex(songs.indexOf(query));setAudioUrl(data.downloadUrl);console.log(data.downloadUrl);setCurrImage(data.imageUrl);}catch(error){console.error('Error playing song:',error);}};const nextSong=async()=>{try{const nextSong=songs[(currindex+1)%songs.length];playSong(nextSong);}catch(error){console.log(\"error occur\");}};const toggleBox=()=>{setIsVisible(prevState=>!prevState);};return/*#__PURE__*/_jsxs(\"div\",{className:\"\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"song-list\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"ShowSong\"}),/*#__PURE__*/_jsx(\"ul\",{children:songs.map((song,index)=>/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"button\",{className:\"button\",onClick:()=>playSong(song),children:/*#__PURE__*/_jsxs(\"div\",{className:\"song-info\",children:[/*#__PURE__*/_jsx(\"img\",{src:imageUrls[song],alt:song}),/*#__PURE__*/_jsx(\"p\",{children:song})]})})},index))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"box \".concat(isVisible?'show':'hide'),children:/*#__PURE__*/_jsxs(\"div\",{className:\"player\",children:[/*#__PURE__*/_jsx(\"img\",{src:currImage,alt:\"\"}),/*#__PURE__*/_jsx(\"audio\",{src:audioUrl,controls:true,autoPlay:true,onEnded:nextSong})]})}),/*#__PURE__*/_jsx(\"button\",{className:\"toggle-btn\",onClick:toggleBox,children:\"Toggle Box\"})]})]});}","map":{"version":3,"names":["React","useEffect","useState","jsx","_jsx","jsxs","_jsxs","Song","isVisible","setIsVisible","songs","setSongs","audioUrl","setAudioUrl","currImage","setCurrImage","queryParam","setQueryParam","imageUrls","setImageUrls","currindex","setcurrindex","getQueryParam","urlParams","URLSearchParams","window","location","search","get","fetchSongs","response","fetch","concat","ok","Error","data","json","error","console","fetchImages","urls","Promise","all","map","song","url","playSong","query","indexOf","downloadUrl","log","imageUrl","nextSong","length","toggleBox","prevState","className","children","index","onClick","src","alt","controls","autoPlay","onEnded"],"sources":["/home/ajay/Desktop/spotyt/frontend/src/pages/Songs.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport '../style/song.css';\n\nexport default function Song() {\n    const [isVisible, setIsVisible] = useState(false);\n    const [songs, setSongs] = useState([]);\n    const [audioUrl, setAudioUrl] = useState('');\n    const [currImage, setCurrImage] = useState('');\n    const [queryParam, setQueryParam] = useState('');\n    const [imageUrls, setImageUrls] = useState({});\n    const [currindex, setcurrindex] = useState();\n    useEffect(() => {\n        const getQueryParam = async () => {\n            const urlParams = await new URLSearchParams(window.location.search);\n            setQueryParam(urlParams.get('playlistId'));\n        };\n        getQueryParam();\n    }, []);\n\n    useEffect(() => {\n        const fetchSongs = async () => {\n            try {\n                const response = await fetch(`http://localhost:5000/fetchSong/${queryParam}`);\n                if (!response.ok) {\n                    throw new Error('Failed to fetch songs');\n                }\n                const data = await response.json();\n                setSongs(data.songs);\n            } catch (error) {\n                console.error('Error fetching songs:', error);\n            }\n        };\n        fetchSongs();\n    }, [queryParam]);\n\n    useEffect(() => {\n        const fetchImages = async () => {\n            const urls = {};\n            await Promise.all(\n                songs.map(async (song) => {\n                    try {\n                        const response = await fetch(`https://spotyt.onrender.com//fetchImage/${song}`);\n                        if (!response.ok) {\n                            throw new Error('Failed to fetch image');\n                        }\n                        const data = await response.json();\n                        urls[song] = data.url;\n                    } catch (error) {\n                        console.error('Error fetching image:', error);\n                    }\n                })\n            );\n            setImageUrls(urls);\n        };\n\n        fetchImages();\n    }, [songs]);\n\n    const playSong = async (query) => {\n        try {\n            const response = await fetch(`https://spotyt.onrender.com//fetchUrl/${query}`);\n            if (!response.ok) {\n                throw new Error('Failed to fetch song URL');\n            }\n            const data = await response.json();\n            setcurrindex(songs.indexOf(query));\n            setAudioUrl(data.downloadUrl);\n            console.log(data.downloadUrl);\n            setCurrImage(data.imageUrl);\n\n        } catch (error) {\n            console.error('Error playing song:', error);\n        }\n    };\n    const nextSong = async () => {\n        try {\n            const nextSong = songs[(currindex + 1) % songs.length];\n            playSong(nextSong);\n        }\n        catch (error) {\n            console.log(\"error occur\");\n        }\n    }\n\n    const toggleBox = () => {\n        setIsVisible(prevState => !prevState);\n    };\n    return (\n        <div className=''>\n\n            <div className='song-list'>\n                <h1>ShowSong</h1>\n                <ul>\n                    {songs.map((song, index) => (\n                        <li key={index}>\n                            <button className=\"button\" onClick={() => playSong(song)}>\n                                <div className='song-info'>\n                                    <img src={imageUrls[song]} alt={song} />\n                                    <p>{song}</p>\n                                </div>\n                            </button>\n                        </li>\n                    ))}\n                </ul>\n            </div>\n\n            <div className=\"container\">\n                <div className={`box ${isVisible ? 'show' : 'hide'}`}>\n                    <div className='player'>\n\n                        <img src={currImage} alt=\"\" />\n                        <audio src={audioUrl} controls autoPlay onEnded={nextSong}></audio>\n                    </div>\n                </div>\n\n                <button className=\"toggle-btn\" onClick={toggleBox}>Toggle Box</button>\n            </div>\n\n        </div>\n    );\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}