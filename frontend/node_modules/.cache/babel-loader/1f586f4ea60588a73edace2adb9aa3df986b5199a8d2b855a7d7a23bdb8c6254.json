{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Route,Navigate}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";export default function ShowPlaylist(props){const[playlists,setplaylist]=useState([]);useEffect(()=>{const fetchSongs=async()=>{try{const response=await fetch(\"http://localhost:5000/fetchPlaylist/\".concat(props.email));if(!response.ok){throw new Error('Failed to fetch songs');}const data=await response.json();console.log(data.playlistName);setplaylist(data.playlistName);}catch(error){console.error('Error fetching songs:',error);}};fetchSongs();},[props.email]);const handleClick=playlistId=>{console.log(playlistId);window.location.href=\"/playlist/?playlistId=\".concat(playlistId);};return/*#__PURE__*/_jsx(\"div\",{className:\"showplaylist\",children:playlists.map(playlistId=>/*#__PURE__*/_jsx(\"button\",{className:\"button\",onClick:()=>handleClick(playlistId),children:playlistId},playlistId))});}","map":{"version":3,"names":["React","useState","useEffect","Route","Navigate","jsx","_jsx","ShowPlaylist","props","playlists","setplaylist","fetchSongs","response","fetch","concat","email","ok","Error","data","json","console","log","playlistName","error","handleClick","playlistId","window","location","href","className","children","map","onClick"],"sources":["/home/ajay/Desktop/spotyt/frontend/src/features/ShowPlaylist.js"],"sourcesContent":["\nimport React, { useState, useEffect } from 'react'\nimport { Route, Navigate } from 'react-router-dom';\n\nexport default function ShowPlaylist(props) {\n    const [playlists, setplaylist] = useState([]);\n    useEffect(() => {\n        const fetchSongs = async () => {\n            try {\n                const response = await fetch(`http://localhost:5000/fetchPlaylist/${props.email}`);\n\n                if (!response.ok) {\n                    throw new Error('Failed to fetch songs');\n                }\n                const data = await response.json();\n                console.log(data.playlistName);\n                setplaylist(data.playlistName);\n            } catch (error) {\n                console.error('Error fetching songs:', error);\n            }\n        };\n\n        fetchSongs();\n    }, [props.email]);\n\n    const handleClick = (playlistId) => {\n        console.log(playlistId);\n        window.location.href = `/playlist/?playlistId=${playlistId}`\n    }\n    return (\n        <div className='showplaylist'>\n            {playlists.map(playlistId => (\n                <button className='button' key={playlistId} onClick={() => handleClick(playlistId)}>{playlistId}</button>\n            ))}\n        </div>\n    )\n}\n\n"],"mappings":"AACA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,KAAK,CAAEC,QAAQ,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEnD,cAAe,SAAS,CAAAC,YAAYA,CAACC,KAAK,CAAE,CACxC,KAAM,CAACC,SAAS,CAAEC,WAAW,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CAC7CC,SAAS,CAAC,IAAM,CACZ,KAAM,CAAAS,UAAU,CAAG,KAAAA,CAAA,GAAY,CAC3B,GAAI,CACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,wCAAAC,MAAA,CAAwCN,KAAK,CAACO,KAAK,CAAE,CAAC,CAElF,GAAI,CAACH,QAAQ,CAACI,EAAE,CAAE,CACd,KAAM,IAAI,CAAAC,KAAK,CAAC,uBAAuB,CAAC,CAC5C,CACA,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAN,QAAQ,CAACO,IAAI,CAAC,CAAC,CAClCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAACI,YAAY,CAAC,CAC9BZ,WAAW,CAACQ,IAAI,CAACI,YAAY,CAAC,CAClC,CAAE,MAAOC,KAAK,CAAE,CACZH,OAAO,CAACG,KAAK,CAAC,uBAAuB,CAAEA,KAAK,CAAC,CACjD,CACJ,CAAC,CAEDZ,UAAU,CAAC,CAAC,CAChB,CAAC,CAAE,CAACH,KAAK,CAACO,KAAK,CAAC,CAAC,CAEjB,KAAM,CAAAS,WAAW,CAAIC,UAAU,EAAK,CAChCL,OAAO,CAACC,GAAG,CAACI,UAAU,CAAC,CACvBC,MAAM,CAACC,QAAQ,CAACC,IAAI,0BAAAd,MAAA,CAA4BW,UAAU,CAAE,CAChE,CAAC,CACD,mBACInB,IAAA,QAAKuB,SAAS,CAAC,cAAc,CAAAC,QAAA,CACxBrB,SAAS,CAACsB,GAAG,CAACN,UAAU,eACrBnB,IAAA,WAAQuB,SAAS,CAAC,QAAQ,CAAkBG,OAAO,CAAEA,CAAA,GAAMR,WAAW,CAACC,UAAU,CAAE,CAAAK,QAAA,CAAEL,UAAU,EAA/DA,UAAwE,CAC3G,CAAC,CACD,CAAC,CAEd","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}