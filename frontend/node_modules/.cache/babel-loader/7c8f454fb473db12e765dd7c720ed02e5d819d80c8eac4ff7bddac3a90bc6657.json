{"ast":null,"code":"var _jsxFileName = \"/home/ajay/Desktop/spotyt/frontend/src/features/ShowPlaylist.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react'\n// import { Route, Navigate } from 'react-router-dom';\n\n// export default function ShowPlaylist(props) {\n//     const [playlists, setplaylist] = useState([]);\n//     useEffect(() => {\n//         const fetchSongs = async () => {\n//             try {\n//                 const response = await fetch(`http://localhost:5000/fetchPlaylist/${props.email}`);\n\n//                 if (!response.ok) {\n//                     throw new Error('Failed to fetch songs');\n//                 }\n//                 const data = await response.json();\n//                 console.log(data.playlistName);\n//                 setplaylist(data.playlistName);\n//             } catch (error) {\n//                 console.error('Error fetching songs:', error);\n//             }\n//         };\n\n//         fetchSongs();\n//     }, [props.email]);\n\n//     const handleClick = (playlistId) => {\n//         console.log(playlistId);\n//         <Navigate to={`/playlist/${playlistId}`} />\n//     }\n//     return (\n//         <div>\n//             {playlists.map(playlistId => (\n//                 <button key={playlistId} onClick={() => handleClick(playlistId)}>{playlistId}</button>\n//             ))}\n//         </div>\n//     )\n// }\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ShowPlaylist(props) {\n  _s();\n  const [playlists, setPlaylists] = useState([]);\n  const history = useHistory();\n  useEffect(() => {\n    const fetchSongs = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/fetchPlaylist/${props.email}`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch songs');\n        }\n        const data = await response.json();\n        console.log(data.playlistName);\n        setPlaylists(data.playlistName);\n      } catch (error) {\n        console.error('Error fetching songs:', error);\n      }\n    };\n    fetchSongs();\n  }, [props.email]);\n  const handleClick = playlistId => {\n    console.log(playlistId);\n    history.push(`/playlist/${playlistId}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: playlists.map(playlistId => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleClick(playlistId),\n      children: playlistId\n    }, playlistId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n}\n_s(ShowPlaylist, \"HLGwP9Jbo35X+NrvaKuUbQ9+9f8=\", false, function () {\n  return [useHistory];\n});\n_c = ShowPlaylist;\nvar _c;\n$RefreshReg$(_c, \"ShowPlaylist\");","map":{"version":3,"names":["React","useState","useEffect","useHistory","jsxDEV","_jsxDEV","ShowPlaylist","props","_s","playlists","setPlaylists","history","fetchSongs","response","fetch","email","ok","Error","data","json","console","log","playlistName","error","handleClick","playlistId","push","children","map","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/ajay/Desktop/spotyt/frontend/src/features/ShowPlaylist.js"],"sourcesContent":["\n// import React, { useState, useEffect } from 'react'\n// import { Route, Navigate } from 'react-router-dom';\n\n// export default function ShowPlaylist(props) {\n//     const [playlists, setplaylist] = useState([]);\n//     useEffect(() => {\n//         const fetchSongs = async () => {\n//             try {\n//                 const response = await fetch(`http://localhost:5000/fetchPlaylist/${props.email}`);\n\n//                 if (!response.ok) {\n//                     throw new Error('Failed to fetch songs');\n//                 }\n//                 const data = await response.json();\n//                 console.log(data.playlistName);\n//                 setplaylist(data.playlistName);\n//             } catch (error) {\n//                 console.error('Error fetching songs:', error);\n//             }\n//         };\n\n//         fetchSongs();\n//     }, [props.email]);\n\n//     const handleClick = (playlistId) => {\n//         console.log(playlistId);\n//         <Navigate to={`/playlist/${playlistId}`} />\n//     }\n//     return (\n//         <div>\n//             {playlists.map(playlistId => (\n//                 <button key={playlistId} onClick={() => handleClick(playlistId)}>{playlistId}</button>\n//             ))}\n//         </div>\n//     )\n// }\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nexport default function ShowPlaylist(props) {\n    const [playlists, setPlaylists] = useState([]);\n    const history = useHistory();\n\n    useEffect(() => {\n        const fetchSongs = async () => {\n            try {\n                const response = await fetch(`http://localhost:5000/fetchPlaylist/${props.email}`);\n\n                if (!response.ok) {\n                    throw new Error('Failed to fetch songs');\n                }\n                const data = await response.json();\n                console.log(data.playlistName);\n                setPlaylists(data.playlistName);\n            } catch (error) {\n                console.error('Error fetching songs:', error);\n            }\n        };\n\n        fetchSongs();\n    }, [props.email]);\n\n    const handleClick = (playlistId) => {\n        console.log(playlistId);\n        history.push(`/playlist/${playlistId}`);\n    }\n\n    return (\n        <div>\n            {playlists.map(playlistId => (\n                <button key={playlistId} onClick={() => handleClick(playlistId)}>{playlistId}</button>\n            ))}\n        </div>\n    )\n}\n"],"mappings":";;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,UAAU,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,eAAe,SAASC,YAAYA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACxC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAMU,OAAO,GAAGR,UAAU,CAAC,CAAC;EAE5BD,SAAS,CAAC,MAAM;IACZ,MAAMU,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,uCAAsCP,KAAK,CAACQ,KAAM,EAAC,CAAC;QAElF,IAAI,CAACF,QAAQ,CAACG,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;QAC5C;QACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QAClCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAACI,YAAY,CAAC;QAC9BZ,YAAY,CAACQ,IAAI,CAACI,YAAY,CAAC;MACnC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZH,OAAO,CAACG,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MACjD;IACJ,CAAC;IAEDX,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,CAACL,KAAK,CAACQ,KAAK,CAAC,CAAC;EAEjB,MAAMS,WAAW,GAAIC,UAAU,IAAK;IAChCL,OAAO,CAACC,GAAG,CAACI,UAAU,CAAC;IACvBd,OAAO,CAACe,IAAI,CAAE,aAAYD,UAAW,EAAC,CAAC;EAC3C,CAAC;EAED,oBACIpB,OAAA;IAAAsB,QAAA,EACKlB,SAAS,CAACmB,GAAG,CAACH,UAAU,iBACrBpB,OAAA;MAAyBwB,OAAO,EAAEA,CAAA,KAAML,WAAW,CAACC,UAAU,CAAE;MAAAE,QAAA,EAAEF;IAAU,GAA/DA,UAAU;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA8D,CACxF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAACzB,EAAA,CAnCuBF,YAAY;EAAA,QAEhBH,UAAU;AAAA;AAAA+B,EAAA,GAFN5B,YAAY;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}