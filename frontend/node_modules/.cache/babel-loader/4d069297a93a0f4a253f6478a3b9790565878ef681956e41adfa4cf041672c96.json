{"ast":null,"code":"var _jsxFileName = \"/home/ajay/Desktop/spotyt/frontend/src/features/ShowPlaylist.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ShowPlaylist() {\n  const handleauth = async event => {\n    try {\n      const response = await fetch('http://localhost:5000/auth');\n      if (!response.ok) {\n        throw new Error('Failed to fetch');\n      }\n      // If the response status is okay, you can proceed with further actions\n      console.log('Authorization initiated successfully');\n      // Optionally, you can parse response data if needed\n      const data = await response.json();\n      console.log('Response data:', data);\n    } catch (error) {\n      console.error('Error initiating authorization:', error);\n      // Handle the error (e.g., display an error message to the user)\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleauth,\n      children: \"authrizespotify\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      action: `http://localhost:5000/search`,\n      method: \"POST\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"url\",\n        children: \"enter the spotify url\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"url\",\n        id: \"url\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n_c = ShowPlaylist;\nvar _c;\n$RefreshReg$(_c, \"ShowPlaylist\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ShowPlaylist","handleauth","event","response","fetch","ok","Error","console","log","data","json","error","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","action","method","htmlFor","type","name","id","_c","$RefreshReg$"],"sources":["/home/ajay/Desktop/spotyt/frontend/src/features/ShowPlaylist.js"],"sourcesContent":["import React from 'react'\n\n\nexport default function ShowPlaylist() {\n    const handleauth = async (event) => {\n        try {\n            const response = await fetch('http://localhost:5000/auth');\n            if (!response.ok) {\n                throw new Error('Failed to fetch');\n            }\n            // If the response status is okay, you can proceed with further actions\n            console.log('Authorization initiated successfully');\n            // Optionally, you can parse response data if needed\n            const data = await response.json();\n            console.log('Response data:', data);\n        } catch (error) {\n            console.error('Error initiating authorization:', error);\n            // Handle the error (e.g., display an error message to the user)\n        }\n    };\n    \n    return (\n        <div>\n            <button onClick={handleauth}>authrizespotify</button>\n            <form action={`http://localhost:5000/search`} method='POST'>\n                <label htmlFor=\"url\">enter the spotify url</label>\n                <input \n                type=\"text\"\n                name=\"url\"\n                id='url'\n                />\n                <button type='submit'>Submit</button>\n            </form>\n        </div>\n    )\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGzB,eAAe,SAASC,YAAYA,CAAA,EAAG;EACnC,MAAMC,UAAU,GAAG,MAAOC,KAAK,IAAK;IAChC,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4BAA4B,CAAC;MAC1D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;MACtC;MACA;MACAC,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAC;MACnD;MACA,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;MAClCH,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEC,IAAI,CAAC;IACvC,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZJ,OAAO,CAACI,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACvD;IACJ;EACJ,CAAC;EAED,oBACIZ,OAAA;IAAAa,QAAA,gBACIb,OAAA;MAAQc,OAAO,EAAEZ,UAAW;MAAAW,QAAA,EAAC;IAAe;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACrDlB,OAAA;MAAMmB,MAAM,EAAG,8BAA8B;MAACC,MAAM,EAAC,MAAM;MAAAP,QAAA,gBACvDb,OAAA;QAAOqB,OAAO,EAAC,KAAK;QAAAR,QAAA,EAAC;MAAqB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAClDlB,OAAA;QACAsB,IAAI,EAAC,MAAM;QACXC,IAAI,EAAC,KAAK;QACVC,EAAE,EAAC;MAAK;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC,eACFlB,OAAA;QAAQsB,IAAI,EAAC,QAAQ;QAAAT,QAAA,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd;AAACO,EAAA,GAhCuBxB,YAAY;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}