{"ast":null,"code":"var _jsxFileName = \"/home/ajay/Desktop/spotyt/frontend/src/auth/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { url } from '../connect/url';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n  const [email, setemail] = useState('');\n  const [password, setPassword] = useState('');\n  const handleSubmit = event => {\n    event.preventDefault();\n    // Perform form submission logic here\n    // For example, you can send a POST request to your server\n    fetch(`${url}/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    }).then(response => {\n      // Handle response from server\n      if (response.ok) {\n        // Redirect user or perform other actions\n      } else {\n        // Handle error response\n      }\n    }).catch(error => {\n      // Handle fetch error\n      console.error('Error:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"user_email\",\n        children: \"Userid or Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"user_email\",\n        name: \"email\",\n        value: email,\n        required: true,\n        onChange: event => setEmail(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\" // Use type=\"password\" for password field\n        ,\n        id: \"password\",\n        name: \"password\",\n        value: password,\n        required: true,\n        onChange: event => setPassword(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/register\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 3\n  }, this);\n}\n_s(Login, \"/ggOlviE1Ii9QkVjmC+megNd6uk=\");\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Link","url","jsxDEV","_jsxDEV","Login","_s","email","setemail","password","setPassword","handleSubmit","event","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","ok","catch","error","console","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","name","value","required","onChange","setEmail","target","to","_c","$RefreshReg$"],"sources":["/home/ajay/Desktop/spotyt/frontend/src/auth/Login.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { Link } from 'react-router-dom';\nimport { url } from '../connect/url';\n\nexport default function Login() {\n\tconst [email, setemail] = useState('');\n\tconst [password, setPassword] = useState('');\n\n\tconst handleSubmit = (event) => {\n\t\tevent.preventDefault();\n\t\t// Perform form submission logic here\n\t\t// For example, you can send a POST request to your server\n\t\tfetch(`${url}/login`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t},\n\t\t\tbody: JSON.stringify({ email, password })\n\t\t})\n\t\t\t.then(response => {\n\t\t\t\t// Handle response from server\n\t\t\t\tif (response.ok) {\n\t\t\t\t\t// Redirect user or perform other actions\n\t\t\t\t} else {\n\t\t\t\t\t// Handle error response\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\t// Handle fetch error\n\t\t\t\tconsole.error('Error:', error);\n\t\t\t});\n\t};\n\treturn (\n\t\t<div>\n\t\t\t<form onSubmit={handleSubmit}>\n\n\t\t\t\t<label htmlFor=\"user_email\">Userid or Email</label>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tid=\"user_email\"\n\t\t\t\t\tname=\"email\"\n\t\t\t\t\tvalue={email}\n\t\t\t\t\trequired\n\t\t\t\t\tonChange={(event) => setEmail(event.target.value)}\n\t\t\t\t/>\n\t\t\t\t<br />\n\t\t\t\t<label htmlFor=\"password\">Password</label>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"password\" // Use type=\"password\" for password field\n\t\t\t\t\tid=\"password\"\n\t\t\t\t\tname=\"password\"\n\t\t\t\t\tvalue={password}\n\t\t\t\t\trequired\n\t\t\t\t\tonChange={(event) => setPassword(event.target.value)}\n\t\t\t\t/>\n\t\t\t\t<button type=\"submit\">Login</button>\n\t\t\t</form>\n\t\t\t<p>\n\t\t\t\tDon't have an account? <Link to=\"/register\">Register</Link>\n\t\t\t</p>\n\t\t</div>\n\t)\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}