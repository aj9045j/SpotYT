{"ast":null,"code":"var _jsxFileName = \"/home/ajay/Desktop/spotyt/frontend/src/pages/Songs.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport '../st';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Song() {\n  _s();\n  const [songs, setSongs] = useState([]);\n  const [audioUrl, setAudioUrl] = useState('');\n  const [currImage, setCurrImage] = useState('');\n  const [queryParam, setQueryParam] = useState('');\n  const [imageUrls, setImageUrls] = useState({});\n  const [popupVisible, setPopupVisible] = useState(false);\n  useEffect(() => {\n    const getQueryParam = async () => {\n      const urlParams = await new URLSearchParams(window.location.search);\n      setQueryParam(urlParams.get('playlistId'));\n    };\n    getQueryParam();\n  }, []);\n  useEffect(() => {\n    const fetchSongs = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/fetchSong/${queryParam}`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch songs');\n        }\n        const data = await response.json();\n        setSongs(data.songs);\n      } catch (error) {\n        console.error('Error fetching songs:', error);\n      }\n    };\n    fetchSongs();\n  }, [queryParam]);\n  useEffect(() => {\n    const fetchImages = async () => {\n      const urls = {};\n      await Promise.all(songs.map(async song => {\n        try {\n          const response = await fetch(`http://localhost:5000/fetchImage/${song}`);\n          if (!response.ok) {\n            throw new Error('Failed to fetch image');\n          }\n          const data = await response.json();\n          urls[song] = data.url;\n        } catch (error) {\n          console.error('Error fetching image:', error);\n        }\n      }));\n      setImageUrls(urls);\n    };\n    fetchImages();\n  }, [songs]);\n  const playSong = async query => {\n    try {\n      const response = await fetch(`http://localhost:5000/fetchUrl/${query}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch song URL');\n      }\n      const data = await response.json();\n      setAudioUrl(data.downloadUrl);\n      setCurrImage(data.imageUrl);\n      setPopupVisible(true);\n    } catch (error) {\n      console.error('Error playing song:', error);\n    }\n  };\n  const closePopup = () => {\n    setPopupVisible(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"song-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"ShowSong\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: songs.map((song, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            onClick: () => playSong(song),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"song-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: imageUrls[song],\n                alt: song\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: song\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `open-popup-btn ${popupVisible ? 'hidden' : ''}`,\n      onClick: () => setPopupVisible(true),\n      children: \"Open Popup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `popup ${popupVisible ? 'active' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-btn\",\n        onClick: closePopup,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: currImage,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        src: audioUrl,\n        controls: true,\n        autoPlay: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n}\n_s(Song, \"qNWGBuJZgPB/8/Y+8L56SgaNB4Q=\");\n_c = Song;\nvar _c;\n$RefreshReg$(_c, \"Song\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Song","_s","songs","setSongs","audioUrl","setAudioUrl","currImage","setCurrImage","queryParam","setQueryParam","imageUrls","setImageUrls","popupVisible","setPopupVisible","getQueryParam","urlParams","URLSearchParams","window","location","search","get","fetchSongs","response","fetch","ok","Error","data","json","error","console","fetchImages","urls","Promise","all","map","song","url","playSong","query","downloadUrl","imageUrl","closePopup","className","children","fileName","_jsxFileName","lineNumber","columnNumber","index","onClick","src","alt","controls","autoPlay","_c","$RefreshReg$"],"sources":["/home/ajay/Desktop/spotyt/frontend/src/pages/Songs.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport '../st'\n\nexport default function Song() {\n    const [songs, setSongs] = useState([]);\n    const [audioUrl, setAudioUrl] = useState('');\n    const [currImage, setCurrImage] = useState('');\n    const [queryParam, setQueryParam] = useState('');\n    const [imageUrls, setImageUrls] = useState({});\n    const [popupVisible, setPopupVisible] = useState(false);\n\n    useEffect(() => {\n        const getQueryParam = async () => {\n            const urlParams = await new URLSearchParams(window.location.search);\n            setQueryParam(urlParams.get('playlistId'));\n        };\n        getQueryParam();\n    }, []);\n\n    useEffect(() => {\n        const fetchSongs = async () => {\n            try {\n                const response = await fetch(`http://localhost:5000/fetchSong/${queryParam}`);\n                if (!response.ok) {\n                    throw new Error('Failed to fetch songs');\n                }\n                const data = await response.json();\n                setSongs(data.songs);\n            } catch (error) {\n                console.error('Error fetching songs:', error);\n            }\n        };\n        fetchSongs();\n    }, [queryParam]);\n\n    useEffect(() => {\n        const fetchImages = async () => {\n            const urls = {};\n            await Promise.all(\n                songs.map(async (song) => {\n                    try {\n                        const response = await fetch(`http://localhost:5000/fetchImage/${song}`);\n                        if (!response.ok) {\n                            throw new Error('Failed to fetch image');\n                        }\n                        const data = await response.json();\n                        urls[song] = data.url;\n                    } catch (error) {\n                        console.error('Error fetching image:', error);\n                    }\n                })\n            );\n            setImageUrls(urls);\n        };\n\n        fetchImages();\n    }, [songs]);\n\n    const playSong = async (query) => {\n        try {\n            const response = await fetch(`http://localhost:5000/fetchUrl/${query}`);\n            if (!response.ok) {\n                throw new Error('Failed to fetch song URL');\n            }\n            const data = await response.json();\n            setAudioUrl(data.downloadUrl);\n            setCurrImage(data.imageUrl);\n            setPopupVisible(true);\n        } catch (error) {\n            console.error('Error playing song:', error);\n        }\n    };\n\n    const closePopup = () => {\n        setPopupVisible(false);\n    };\n\n    return (\n        <div className='player'>\n            <div className='song-list'>\n                <h1>ShowSong</h1>\n                <ul>\n                    {songs.map((song, index) => (\n                        <li key={index}>\n                            <button className=\"button\" onClick={() => playSong(song)}>\n                                <div className='song-info'>\n                                    <img src={imageUrls[song]} alt={song} />\n                                    <p>{song}</p>\n                                </div>\n                            </button>\n                        </li>\n                    ))}\n                </ul>\n            </div>\n\n            {/* Button to open popup */}\n            <button className={`open-popup-btn ${popupVisible ? 'hidden' : ''}`} onClick={() => setPopupVisible(true)}>Open Popup</button>\n\n            {/* Popup */}\n            <div className={`popup ${popupVisible ? 'active' : ''}`}>\n                <button className=\"close-btn\" onClick={closePopup}>Close</button>\n                <img src={currImage} alt=\"\" />\n                <audio src={audioUrl} controls autoPlay></audio>\n            </div>\n        </div>\n    );\n}\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}