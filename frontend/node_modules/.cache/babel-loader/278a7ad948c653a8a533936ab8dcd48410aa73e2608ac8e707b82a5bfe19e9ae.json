{"ast":null,"code":"var _jsxFileName = \"/home/ajay/Desktop/spotyt/frontend/src/features/ShowPlaylist.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useE } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ShowPlaylist(props) {\n  _s();\n  const [playlists, setplaylist] = useState([]);\n  useEffect(() => {\n    const fetchSongs = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/fetchPlaylist/${props.email}`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch songs');\n        }\n        const data = await res.json();\n        console.log(data.playlistName);\n        setplaylist(data.playlistName);\n      } catch (error) {\n        console.error('Error fetching songs:', error);\n      }\n    };\n    fetchSongs();\n  }, [props.email]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: playlists.map(playlistId => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: playlistId\n    }, playlistId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n_s(ShowPlaylist, \"qpp1wbb9KwSZT63OU3AnS+Ux9dI=\");\n_c = ShowPlaylist;\nvar _c;\n$RefreshReg$(_c, \"ShowPlaylist\");","map":{"version":3,"names":["React","useState","useE","jsxDEV","_jsxDEV","ShowPlaylist","props","_s","playlists","setplaylist","useEffect","fetchSongs","response","fetch","email","ok","Error","data","res","json","console","log","playlistName","error","children","map","playlistId","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/ajay/Desktop/spotyt/frontend/src/features/ShowPlaylist.js"],"sourcesContent":["\nimport React, { useState, useE } from 'react'\n\nexport default function ShowPlaylist(props) {\n    const [playlists, setplaylist] = useState([]);\n    useEffect(() => {\n        const fetchSongs = async () => {\n            try {\n                const response = await fetch(`http://localhost:5000/fetchPlaylist/${props.email}`);\n\n                if (!response.ok) {\n                    throw new Error('Failed to fetch songs');\n                }\n                const data = await res.json();\n                console.log(data.playlistName);\n                setplaylist(data.playlistName);\n            } catch (error) {\n                console.error('Error fetching songs:', error);\n            }\n        };\n\n        fetchSongs();\n    }, [props.email]);\n\n    return (\n        <div>\n            {playlists.map(playlistId => (\n                <div key={playlistId}>{playlistId}</div>\n            ))}\n        </div>\n    )\n}\n"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,IAAI,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7C,eAAe,SAASC,YAAYA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACxC,MAAM,CAACC,SAAS,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC7CS,SAAS,CAAC,MAAM;IACZ,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,uCAAsCP,KAAK,CAACQ,KAAM,EAAC,CAAC;QAElF,IAAI,CAACF,QAAQ,CAACG,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;QAC5C;QACA,MAAMC,IAAI,GAAG,MAAMC,GAAG,CAACC,IAAI,CAAC,CAAC;QAC7BC,OAAO,CAACC,GAAG,CAACJ,IAAI,CAACK,YAAY,CAAC;QAC9Bb,WAAW,CAACQ,IAAI,CAACK,YAAY,CAAC;MAClC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZH,OAAO,CAACG,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MACjD;IACJ,CAAC;IAEDZ,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,CAACL,KAAK,CAACQ,KAAK,CAAC,CAAC;EAEjB,oBACIV,OAAA;IAAAoB,QAAA,EACKhB,SAAS,CAACiB,GAAG,CAACC,UAAU,iBACrBtB,OAAA;MAAAoB,QAAA,EAAuBE;IAAU,GAAvBA,UAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAmB,CAC1C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAACvB,EAAA,CA5BuBF,YAAY;AAAA0B,EAAA,GAAZ1B,YAAY;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}