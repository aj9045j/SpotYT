{"ast":null,"code":"var _jsxFileName = \"/home/ajay/Desktop/spotyt/frontend/src/features/ShowSong.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n\n// export default function ShowSong(props) {\n//     const [songs, setSongs] = useState([]);\n//     const [currentSong, setCurrentSong] = useState(null);\n//     const [audioUrl, setAudioUrl] = useState('');\n\n//     useEffect(() => {\n//         const fetchSongs = async () => {\n//             try {\n//                 const response = await fetch(`http://localhost:5000/fetchSong/${props.email}`);\n//                 if (!response.ok) {\n//                     throw new Error('Failed to fetch songs');\n//                 }\n//                 const data = await response.json();\n//                 setSongs(data.songs);\n//             } catch (error) {\n//                 console.error('Error fetching songs:', error);\n//             }\n//         };\n\n//         fetchSongs();\n//     }, [props.email]);\n\n//     const playSong = async (query) => {\n//         try {\n//             const response = await fetch(`http://localhost:5000/fetchUrl/${query}`);\n//             if (!response.ok) {\n//                 throw new Error('Failed to fetch song URL');\n//             }\n//             const data = await response.json();\n//             setAudioUrl(data.downloadUrl);\n//             console.log(data.downloadUrl);\n//             setCurrentSong(query);\n//         } catch (error) {\n//             console.error('Error playing song:', error);\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <h1>ShowSong</h1>\n//             <ul>\n//                 {songs.map((song, index) => (\n//                     <li key={index}>\n//                         <p>{song}</p>\n//                         <div>\n//                             <audio controls>\n//                                 <source src={currentSong == song ? audioUrl : ''} type=\"audio/mpeg\" />\n//                                 Your browser does not support the audio element.\n//                             </audio>\n//                         </div>\n//                         <button onClick={() => playSong(song)}>Play</button>\n//                     </li>\n//                 ))}\n//             </ul>\n//         </div>\n//     );\n// }\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ShowSong(props) {\n  _s();\n  const [songs, setSongs] = useState([]);\n  const [audioElements, setAudioElements] = useState({});\n  const [currentSong, setCurrentSong] = useState(null);\n  useEffect(() => {\n    const fetchSongs = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/fetchSong/${props.email}`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch songs');\n        }\n        const data = await response.json();\n        setSongs(data.songs);\n      } catch (error) {\n        console.error('Error fetching songs:', error);\n      }\n    };\n    fetchSongs();\n  }, [props.email]);\n  useEffect(() => {\n    const preloadAudio = async () => {\n      const audioElementsCopy = {\n        ...audioElements\n      };\n      for (const song of songs) {\n        try {\n          const response = await fetch(`http://localhost:5000/fetchUrl/${encodeURIComponent(song)}`);\n          if (!response.ok) {\n            throw new Error(`Failed to fetch URL for song: ${song}`);\n          }\n          const data = await response.json();\n          const audio = new Audio(data.downloadUrl);\n          audioElementsCopy[song] = audio;\n        } catch (error) {\n          console.error(error);\n        }\n      }\n      setAudioElements(audioElementsCopy);\n    };\n    preloadAudio();\n  }, [songs]);\n  const playSong = song => {\n    const audio = audioElements[song];\n    if (audio) {\n      audio.play();\n      setCurrentSong(song);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ShowSong\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: songs.map((song, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: song\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => playSong(song),\n          children: \"Play\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 9\n  }, this);\n}\n_s(ShowSong, \"WjUXX2HNlWZMRzQEbuM5iaMRv44=\");\n_c = ShowSong;\nvar _c;\n$RefreshReg$(_c, \"ShowSong\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","ShowSong","props","_s","songs","setSongs","audioElements","setAudioElements","currentSong","setCurrentSong","fetchSongs","response","fetch","email","ok","Error","data","json","error","console","preloadAudio","audioElementsCopy","song","encodeURIComponent","audio","Audio","downloadUrl","playSong","play","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","_c","$RefreshReg$"],"sources":["/home/ajay/Desktop/spotyt/frontend/src/features/ShowSong.js"],"sourcesContent":["\n\n\n// import React, { useEffect, useState } from 'react';\n\n// export default function ShowSong(props) {\n//     const [songs, setSongs] = useState([]);\n//     const [currentSong, setCurrentSong] = useState(null);\n//     const [audioUrl, setAudioUrl] = useState('');\n\n//     useEffect(() => {\n//         const fetchSongs = async () => {\n//             try {\n//                 const response = await fetch(`http://localhost:5000/fetchSong/${props.email}`);\n//                 if (!response.ok) {\n//                     throw new Error('Failed to fetch songs');\n//                 }\n//                 const data = await response.json();\n//                 setSongs(data.songs);\n//             } catch (error) {\n//                 console.error('Error fetching songs:', error);\n//             }\n//         };\n\n//         fetchSongs();\n//     }, [props.email]);\n\n//     const playSong = async (query) => {\n//         try {\n//             const response = await fetch(`http://localhost:5000/fetchUrl/${query}`);\n//             if (!response.ok) {\n//                 throw new Error('Failed to fetch song URL');\n//             }\n//             const data = await response.json();\n//             setAudioUrl(data.downloadUrl);\n//             console.log(data.downloadUrl);\n//             setCurrentSong(query);\n//         } catch (error) {\n//             console.error('Error playing song:', error);\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <h1>ShowSong</h1>\n//             <ul>\n//                 {songs.map((song, index) => (\n//                     <li key={index}>\n//                         <p>{song}</p>\n//                         <div>\n//                             <audio controls>\n//                                 <source src={currentSong == song ? audioUrl : ''} type=\"audio/mpeg\" />\n//                                 Your browser does not support the audio element.\n//                             </audio>\n//                         </div>\n//                         <button onClick={() => playSong(song)}>Play</button>\n//                     </li>\n//                 ))}\n//             </ul>\n//         </div>\n//     );\n// }\n\nimport React, { useEffect, useState } from 'react';\n\nexport default function ShowSong(props) {\n    const [songs, setSongs] = useState([]);\n    const [audioElements, setAudioElements] = useState({});\n    const [currentSong, setCurrentSong] = useState(null);\n\nuseEffect(() => {\n    const fetchSongs = async () => {\n        try {\n            const response = await fetch(`http://localhost:5000/fetchSong/${props.email}`);\n            if (!response.ok) {\n                throw new Error('Failed to fetch songs');\n            }\n            const data = await response.json();\n            setSongs(data.songs);\n        } catch (error) {\n            console.error('Error fetching songs:', error);\n        }\n    };\n\n    fetchSongs();\n}, [props.email]);\n\n    useEffect(() => {\n        const preloadAudio = async () => {\n            const audioElementsCopy = { ...audioElements };\n            for (const song of songs) {\n                try {\n                    const response = await fetch(`http://localhost:5000/fetchUrl/${encodeURIComponent(song)}`);\n                    if (!response.ok) {\n                        throw new Error(`Failed to fetch URL for song: ${song}`);\n                    }\n                    const data = await response.json();\n                    const audio = new Audio(data.downloadUrl);\n                    audioElementsCopy[song] = audio;\n                } catch (error) {\n                    console.error(error);\n                }\n            }\n            setAudioElements(audioElementsCopy);\n        };\n\n        preloadAudio();\n    }, [songs]);\n\n    const playSong = (song) => {\n        const audio = audioElements[song];\n        if (audio) {\n            audio.play();\n            setCurrentSong(song);\n        }\n    };\n\n    return (\n        <div>\n            <h1>ShowSong</h1>\n            <ul>\n                {songs.map((song, index) => (\n                    <li key={index}>\n                        <p>{song}</p>\n                        <button onClick={() => playSong(song)}>Play</button>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}